<template>
  <div class="<%=snakeFileName%>">
    <page-search
      :search-config="searchConfig"
      :page-store="pageStore"
      @query-click="handleQueryClick"
      @reset-click="handleResetClick"
    />
    <page-content
      ref="contentRef"
      :list-query="{ sort: '-id' }"
      :content-config="contentConfig"
      :is-component="isComponent"
      :page-store="pageStore"
      @edit-click="handleEditBtnClick"
      @new-click="handleNewBtnClick"
    />
    <page-modal
      ref="modalRef"
      :modal-config="modalConfig"
      @handle-click="handleClick"
    />
  </div>
</template>

<script setup lang="ts" name="<%=snakeFileName%>">
// #region ----------------------------导包 start--------------------------------

import PageSearch from "@/components/page-search";
import PageContent from "@/components/page-content";
import PageModal from "@/components/page-modal";

import searchConfig from "./config/search.config";
import contentConfig from "./config/content.config";
import modalConfig from "./config/modal.config";

import usePageContent from "@/hooks/usePageContent";
import usePageModal from "@/hooks/usePageModal";

import usePageStore from "@/stores/page/page";

// #endregion ------------------------------导包 end---------------------------

// #region ------------------------------初始化 start-----------------------------

interface IProps {
  isComponent?: boolean;
}
withDefaults(defineProps<IProps>(), { isComponent: false });

const { contentRef, handleQueryClick, handleResetClick, getSelectionRows } =
  usePageContent();
const { modalRef, handleNewBtnClick, handleEditBtnClick, handleClick } =
  usePageModal();

const pageStore = usePageStore();

// #endregion ------------------------------初始化 end-----------------------------

defineExpose({ getSelectionRows, contentRef });
</script>

<style scoped>
@import url("./<%=snakeFileName%>.less");
</style>
